from "esp32-s3/elec/src/base.ato" import Base, Header4P
from "generics/interfaces.ato" import Power, I2C
from "io-expander.ato" import IOExpander
from "lv2842xlvddcr/lv2842kit.ato" import LV2842Kit
from "motor-driver.ato" import MotorDriver
from "nau7802/elec/src/nau7802.ato" import NAU7802_Dual
from "qwiic-connectors/elec/src/qwiic-connectors.ato" import QwiicConnector
from "saleae-header/saleae-header.ato" import SaleaeHeader
from "sk6805-ec20/elec/src/sk6805-ec20.ato" import SK6805EC20
from "tca9548apwr/elec/src/tca9548apwr.ato" import TCA9548APWR
from "xt-connectors/xt-connectors.ato" import XT30_Male_Right_Angle

module Channel:
    """
    A channel in this board is one motor driver, feedback,
    LED and i2c connector for the load cell etc...

    It's likely that more than one motor will be used on a bath
    and we reduce the scale/LED count later too
    """
    motor_driver = new MotorDriver
    i2c_conn = new QwiicConnector
    led = new SK6805EC20

    i2c = new I2C
    power_12v = new Power
    power_3v3 = new Power
    power_5v = new Power
    motor_driver.pulses ~ signal pulses
    motor_driver.current ~ signal current
    signal dir ~ motor_driver.dir
    signal pwm ~ motor_driver.pwm
    signal led_din ~ led.din.io; led.dout.io ~ signal led_dout

    power_12v ~ motor_driver.power_12v
    power_3v3 ~ motor_driver.power_3v3
    power_3v3 ~ i2c_conn.power
    power_5v ~ led.power
    i2c ~ i2c_conn.i2c


module RoboPlater:
    power_12v = new Power
    power_5v = new Power
    power_3v3 = new Power

    # control ------------------
    uc = new Base
    uc.power_3v3 ~ power_3v3
    uc.power_5v ~ power_5v

    io_expander = new IOExpander
    power_3v3 ~ io_expander.power
    uc.uc.i2c ~ io_expander.i2c

    i2c_mux = new TCA9548APWR
    power_3v3 ~ i2c_mux.power
    uc.uc.i2c ~ i2c_mux.i2c

    # channel hookup ------------------
    # for the first two channels, we'll throw the whole kit and kaboodle
    # at them, so we can debug things like the pulse train feedback
    # without having to re-wire the board
    # ch3-6 are boring, so no current feedback or debug headers for them
    ch1 = new Channel
    ch2 = new Channel
    ch3 = new Channel
    ch4 = new Channel
    ch5 = new Channel
    ch6 = new Channel

    uc.uc.io4 ~ ch1.pulses
    uc.uc.io5 ~ ch1.current
    uc.uc.io15 ~ ch1.dir
    uc.uc.io16 ~ ch1.pwm
    i2c_mux.i2c0 ~ ch1.i2c

    uc.uc.io17 ~ ch2.pulses
    uc.uc.io18 ~ ch2.current
    uc.uc.io8 ~ ch2.dir
    uc.uc.io3 ~ ch2.pwm
    i2c_mux.i2c1 ~ ch2.i2c

    uc.uc.io46 ~ ch3.pulses
    io_expander.io_a_0 ~ ch3.dir
    uc.uc.io14 ~ ch3.pwm
    i2c_mux.i2c2 ~ ch3.i2c

    uc.uc.io21 ~ ch4.pulses
    io_expander.io_a_1 ~ ch4.dir
    uc.uc.io48 ~ ch4.pwm
    i2c_mux.i2c3 ~ ch4.i2c

    uc.uc.io45 ~ ch5.pulses
    io_expander.io_a_2 ~ ch5.dir
    uc.uc.io35 ~ ch5.pwm
    i2c_mux.i2c4 ~ ch5.i2c

    uc.uc.io36 ~ ch6.pulses
    io_expander.io_a_3 ~ ch6.dir
    uc.uc.io38 ~ ch6.pwm
    i2c_mux.i2c5 ~ ch6.i2c

    # chain led connections
    uc.led_dout ~ ch1.led_din
    ch1.led_dout ~ ch2.led_din
    ch2.led_dout ~ ch3.led_din
    ch3.led_dout ~ ch4.led_din
    ch4.led_dout ~ ch5.led_din
    ch5.led_dout ~ ch6.led_din

    # debug headers for ch1 and 2
    ch1_debug = new SaleaeHeader
    ch1_debug.gnd ~ power_3v3.gnd
    ch1.dir ~ ch1_debug.ch0.io
    ch1.pwm ~ ch1_debug.ch1.io
    ch1.current ~ ch1_debug.ch2.io
    ch1.pulses ~ ch1_debug.ch3.io

    ch2_debug = new SaleaeHeader
    ch2_debug.gnd ~ power_3v3.gnd
    ch2.dir ~ ch2_debug.ch0.io
    ch2.pwm ~ ch2_debug.ch1.io
    ch2.current ~ ch2_debug.ch2.io
    ch2.pulses ~ ch2_debug.ch3.io

    # boring repetitive hookups and naming
    ch1.current.override_net_name = "ch1.current"
    ch2.current.override_net_name = "ch2.current"
    ch1.pulses.override_net_name = "ch1.pulses"
    ch2.pulses.override_net_name = "ch2.pulses"
    ch3.pulses.override_net_name = "ch3.pulses"
    ch4.pulses.override_net_name = "ch4.pulses"
    ch5.pulses.override_net_name = "ch5.pulses"
    ch6.pulses.override_net_name = "ch6.pulses"

    ch1.pwm.override_net_name = "ch1.pwm"
    ch2.pwm.override_net_name = "ch2.pwm"
    ch3.pwm.override_net_name = "ch3.pwm"
    ch4.pwm.override_net_name = "ch4.pwm"
    ch5.pwm.override_net_name = "ch5.pwm"
    ch6.pwm.override_net_name = "ch6.pwm"

    ch1.dir.override_net_name = "ch1.dir"
    ch2.dir.override_net_name = "ch2.dir"
    ch3.dir.override_net_name = "ch3.dir"
    ch4.dir.override_net_name = "ch4.dir"
    ch5.dir.override_net_name = "ch5.dir"
    ch6.dir.override_net_name = "ch6.dir"

    power_12v ~ ch1.power_12v
    power_12v ~ ch2.power_12v
    power_12v ~ ch3.power_12v
    power_12v ~ ch4.power_12v
    power_12v ~ ch5.power_12v
    power_12v ~ ch6.power_12v

    power_3v3 ~ ch1.power_3v3
    power_3v3 ~ ch2.power_3v3
    power_3v3 ~ ch3.power_3v3
    power_3v3 ~ ch4.power_3v3
    power_3v3 ~ ch5.power_3v3
    power_3v3 ~ ch6.power_3v3

    power_5v ~ ch1.power_5v
    power_5v ~ ch2.power_5v
    power_5v ~ ch3.power_5v
    power_5v ~ ch4.power_5v
    power_5v ~ ch5.power_5v
    power_5v ~ ch6.power_5v


    # power supply ------------------
    power_connector = new XT30_Male_Right_Angle
    supply_5v = new LV2842Kit
    power_connector.power ~ supply_5v.power_in
    supply_5v.v_in = 10V to 24V
    supply_5v.v_out = 5V +/- 10%
    power_12v ~ supply_5v.power_in; supply_5v.power_out ~ uc.power_raw

    # niceities ------------------
    # an additional header in hopefully a better location
    lcd_2 = new Header4P
    power_3v3 ~ lcd_2.power
    uc.uc.i2c ~ lcd_2.i2c

    # a quiic connector with the main i2c bus on it
    i2c_main = new QwiicConnector
    power_3v3 ~ i2c_main.power
    uc.uc.i2c ~ i2c_main.i2c

    # load cell amplifiers on-board
    load_cell_amp_1 = new NAU7802_Dual
    power_3v3 ~ load_cell_amp_1.power
    i2c_mux.i2c6 ~ load_cell_amp_1.i2c

    load_cell_1 = new LoadCellScrewTerminal
    load_cell_amp_1.force ~ load_cell_1.power
    load_cell_1.p ~ load_cell_amp_1.sense_1.p
    load_cell_1.n ~ load_cell_amp_1.sense_1.n

    load_cell_2 = new LoadCellScrewTerminal
    load_cell_amp_1.force ~ load_cell_2.power
    load_cell_2.p ~ load_cell_amp_1.sense_2.p
    load_cell_2.n ~ load_cell_amp_1.sense_2.n

    load_cell_amp_2 = new NAU7802_Dual
    power_3v3 ~ load_cell_amp_2.power
    i2c_mux.i2c7 ~ load_cell_amp_2.i2c

    load_cell_3 = new LoadCellScrewTerminal
    load_cell_amp_2.force ~ load_cell_3.power
    load_cell_3.p ~ load_cell_amp_2.sense_1.p
    load_cell_3.n ~ load_cell_amp_2.sense_1.n

    load_cell_4 = new LoadCellScrewTerminal
    load_cell_amp_2.force ~ load_cell_4.power
    load_cell_4.p ~ load_cell_amp_2.sense_2.p
    load_cell_4.n ~ load_cell_amp_2.sense_2.n

    a=0

component LoadCellScrewTerminal:
    footprint = "CONN-TH_4P-P5.00_DB127V-5.0-4P-GN-S"
    lcsc_id = "C430624"
    mpn = "C430624"
    # pins

    power = new Power
    power.gnd ~ pin 1
    power.vcc ~ pin 4
    signal p ~ pin 3
    signal n ~ pin 2
